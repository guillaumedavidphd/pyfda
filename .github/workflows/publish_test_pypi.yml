# This workflow builds a pip package (source and wheel) and uploads it to 
# Install the uploaded package using
#   > python3 -m pip install --index-url https://test.pypi.org/simple/ pyfda

name: Publish to TestPyPI

# Controls when the action will run. 
on:
  # Triggers the workflow on push to the master branch
  # push:
  #  branches: [ master ]
  # Run manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      # Sets up python3, installing a version of Python or PyPy and (by default) 
      # adds it to the PATH
      # Optionally: caches dependencies for pip, pipenv and poetry
      # Registers problem matchers for error output (?)
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: "Install and upgrade pip, other dependencies and the package from setup.py"
        run: |
          python3 -m pip install --upgrade pip
          # Install build deps
          python3 -m pip install setuptools wheel twine
          # If requirements.txt exists, install dependencies from it
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Install the package (pyfda) from setup.py
          ## python3 setup.py install

      # Tests with unittest
      # - name: Test with unittest
      #   run: |
      #     cd tests
      #     python3 -m unittest discover
      #     cd ..

      # Build pip packages
      - name: Build source and wheel distribution
        run: python3 setup.py sdist bdist_wheel
      # Upload to TestPyPI
      - name: Upload to TestPyPI
        run: python3 -m twine upload dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TEST_API_TOKEN }}
          TWINE_REPOSITORY: testpypi
        # uses: pypa/gh-action-pypi-publish@release/v1
        # with:
        #   password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        #   repository_url: https://test.pypi.org/legacy/
